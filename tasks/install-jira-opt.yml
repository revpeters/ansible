--- # Install jira on an AW EC2 instance
- hosts: jira
  connection: ssh
  remote_user: ec2-user
  become: yes
  gather_facts: yes
  vars:
    app: jira
    appkey: jira
  vars_files:
    - ../vars/control.yml
  tasks:
    - name: Set vars from localhost
      set_fact:
        customer_name: "{{hostvars['localhost']['customer_name']}}"

    - name: Create jira, jira-home, java
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
        mode: 0755
      with_items:
        - "{{ jira_install_dir }}"
        - "{{ java_install_dir }}"
        - "{{ jira_home }}"

    # Download and install JIRA
    - name: Download JIRA and JAVA tar balls
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        mode: 0777
      with_items:
        - { url: "{{ jira_download_url }}", dest: "{{ jira_install_dir }}" }
        - { url: "{{ java_download_url }}", dest: "{{ java_install_dir }}" }

    - name: Untar JIRA and JAVA
      unarchive:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
        remote_src: yes
      with_items:
        - { src: "{{ jira_install_dir }}/atlassian-jira-software-7.13.1.tar.gz", dest: "{{ jira_install_dir }}" }
        - { src: "{{ java_install_dir }}/jdk-8u181-linux-x64.tar.gz", dest: "{{ java_install_dir }}" }

    - name: Symlink JIRA and JAVA to current
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
        mode: 0755
        state: link
      with_items:
        - { src: "{{ jira_install_dir }}/{{ jira_version }}-standalone", dest: "{{ jira_install_dir }}/current" }
        - { src: "{{ java_install_dir }}/{{ java_version }}", dest: "{{ java_install_dir }}/current" }

    - name: Remove 9.4.1212 pgres driver and ssl.conf
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/etc/httpd/conf.d/ssl.conf"
        - "{{ jira_install_dir }}/current/lib/postgresql-9.4.1212.jar"

    - name: download 42.2.1 pgres driver
      get_url:
        url: https://jdbc.postgresql.org/download/postgresql-42.1.1.jar
        dest: "{{ jira_install_dir }}/current/lib/"
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
        mode: 0544

    - name: Update JAVA_HOME
      lineinfile:
        path: "/home/{{ atlassian_user }}/.bash_profile"
        insertbefore: 'export PATH'
        line: 'export JAVA_HOME={{ java_home }}'

    - name: Update PATH
      lineinfile:
        path: "/home/{{ atlassian_user }}/.bash_profile"
        regex: '^export PATH'
        line: 'export PATH=$PATH:$JAVA_HOME/jre/bin'

    - name: Update setenv.sh
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
      with_items:
        - { src: "../files/jira/setenv.sh", dest: "{{ jira_install_dir }}/current/bin/" }

    - name: Update httpd.conf and server.xml with domain names
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
      with_items:
        - { src: "/etc/ansible/playbooks/templates/jira/server.xml.j2", dest: "{{ jira_install_dir }}/current/conf/server.xml" }
        - { src: "/etc/ansible/playbooks/templates/jira/httpd.conf.vhost80.j2", dest: "/etc/httpd/conf/httpd.conf" }
        - { src: "/etc/ansible/playbooks/templates/jira/renewcerts.sh.j2", dest: "{{ jira_home }}/renewcerts.sh"}
      become: true

    - name: Make renewcerts executable for atlasian
      file:
        path: /data/atlassian/jira-home/renewcerts.sh
        mode: 0755

    - name: Start HTTPD
      service:
        name: httpd
        state: started

    - name: Generate ssl certs
      shell: "certbot --apache certonly -n -d {{ customer_name }}-{{ app }}.{{ r53_zone }} --agree-tos --email jacopete@cisco.com"

    - name: Make atlasian owner of /etc/letsencrypt
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
        recurse: yes
      with_items:
        - "/etc/letsencrypt"

    - name: Import certs and build jks
      shell: su - atlasian -c "/data/atlassian/jira-home/renewcerts.sh"

    - name: Update httpd.conf and server.xml with domain names
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ atlassian_user }}"
        group: "{{ atlassian_group }}"
      with_items:
        - { src: "/etc/ansible/playbooks/templates/jira/httpd.conf.j2", dest: "/etc/httpd/conf/httpd.conf" }

    - name: Start HTTPD
      service:
        name: httpd
        state: restarted

#    - name: Restart JIRA
#      command: "{{ item }}"
#      with_items:
#        - su - atlasian -c "{{ jira_install_dir }}/current/bin/stop-jira.sh"
#        - su - atlasian -c "{{ jira_install_dir }}/current/bin/start-jira.sh"